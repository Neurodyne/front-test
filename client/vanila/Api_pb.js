// source: Api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.api.Accelerations', null, global);
goog.exportSymbol('proto.api.BoundingBox', null, global);
goog.exportSymbol('proto.api.ClosestPointsRequest', null, global);
goog.exportSymbol('proto.api.ClosestPointsResponse', null, global);
goog.exportSymbol('proto.api.DataFilter', null, global);
goog.exportSymbol('proto.api.DataPoint', null, global);
goog.exportSymbol('proto.api.Device', null, global);
goog.exportSymbol('proto.api.DeviceSensors', null, global);
goog.exportSymbol('proto.api.Event', null, global);
goog.exportSymbol('proto.api.FieldsToggle', null, global);
goog.exportSymbol('proto.api.GetDevicesRequest', null, global);
goog.exportSymbol('proto.api.GetDevicesResponse', null, global);
goog.exportSymbol('proto.api.GetVehiclesRequest', null, global);
goog.exportSymbol('proto.api.GetVehiclesResponse', null, global);
goog.exportSymbol('proto.api.GpsData', null, global);
goog.exportSymbol('proto.api.HistorySequence', null, global);
goog.exportSymbol('proto.api.ModelUpdatesRequest', null, global);
goog.exportSymbol('proto.api.ModelUpdatesRequest.ModelType', null, global);
goog.exportSymbol('proto.api.ModelUpdatesResponse', null, global);
goog.exportSymbol('proto.api.ObjectData', null, global);
goog.exportSymbol('proto.api.ObjectMetadata', null, global);
goog.exportSymbol('proto.api.ObjectState', null, global);
goog.exportSymbol('proto.api.ObjectsDataRangeRequest', null, global);
goog.exportSymbol('proto.api.ObjectsDataRangeResponse', null, global);
goog.exportSymbol('proto.api.ObjectsDataStreamRequest', null, global);
goog.exportSymbol('proto.api.ObjectsEventsRangeResponse', null, global);
goog.exportSymbol('proto.api.ObjectsEventsRequest', null, global);
goog.exportSymbol('proto.api.ObjectsEventsStreamResponse', null, global);
goog.exportSymbol('proto.api.ObjectsInfoRequest', null, global);
goog.exportSymbol('proto.api.ObjectsInfoResponse', null, global);
goog.exportSymbol('proto.api.ObjectsStateRequest', null, global);
goog.exportSymbol('proto.api.ObjectsStateResponse', null, global);
goog.exportSymbol('proto.api.PointBundle', null, global);
goog.exportSymbol('proto.api.PointEdges', null, global);
goog.exportSymbol('proto.api.ResolveAllTagsMapRequest', null, global);
goog.exportSymbol('proto.api.ResolveAllTagsMapResponse', null, global);
goog.exportSymbol('proto.api.ResolveTagRequest', null, global);
goog.exportSymbol('proto.api.ResolveTagResponse', null, global);
goog.exportSymbol('proto.api.TaggedPoint', null, global);
goog.exportSymbol('proto.api.TagsMapElement', null, global);
goog.exportSymbol('proto.api.Vehicle', null, global);
goog.exportSymbol('proto.api.VehicleInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetVehiclesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetVehiclesRequest.repeatedFields_, null);
};
goog.inherits(proto.api.GetVehiclesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetVehiclesRequest.displayName = 'proto.api.GetVehiclesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetDevicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetDevicesRequest.repeatedFields_, null);
};
goog.inherits(proto.api.GetDevicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetDevicesRequest.displayName = 'proto.api.GetDevicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetVehiclesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetVehiclesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetVehiclesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetVehiclesResponse.displayName = 'proto.api.GetVehiclesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetDevicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GetDevicesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GetDevicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GetDevicesResponse.displayName = 'proto.api.GetDevicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Vehicle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Vehicle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Vehicle.displayName = 'proto.api.Vehicle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Device.displayName = 'proto.api.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ModelUpdatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ModelUpdatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ModelUpdatesRequest.displayName = 'proto.api.ModelUpdatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ModelUpdatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ModelUpdatesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ModelUpdatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ModelUpdatesResponse.displayName = 'proto.api.ModelUpdatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DataFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.DataFilter.repeatedFields_, null);
};
goog.inherits(proto.api.DataFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DataFilter.displayName = 'proto.api.DataFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FieldsToggle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FieldsToggle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FieldsToggle.displayName = 'proto.api.FieldsToggle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.BoundingBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.BoundingBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.BoundingBox.displayName = 'proto.api.BoundingBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsDataRangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectsDataRangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsDataRangeRequest.displayName = 'proto.api.ObjectsDataRangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsDataRangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectsDataRangeResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectsDataRangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsDataRangeResponse.displayName = 'proto.api.ObjectsDataRangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectData.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectData.displayName = 'proto.api.ObjectData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectMetadata.displayName = 'proto.api.ObjectMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DataPoint.displayName = 'proto.api.DataPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.VehicleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.VehicleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.VehicleInfo.displayName = 'proto.api.VehicleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointBundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PointBundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointBundle.displayName = 'proto.api.PointBundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.HistorySequence = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.HistorySequence.repeatedFields_, null);
};
goog.inherits(proto.api.HistorySequence, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.HistorySequence.displayName = 'proto.api.HistorySequence';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Accelerations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Accelerations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Accelerations.displayName = 'proto.api.Accelerations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectState.displayName = 'proto.api.ObjectState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GpsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GpsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.GpsData.displayName = 'proto.api.GpsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Event.displayName = 'proto.api.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsDataStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectsDataStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsDataStreamRequest.displayName = 'proto.api.ObjectsDataStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectsEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectsEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsEventsRequest.displayName = 'proto.api.ObjectsEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectsInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsInfoRequest.displayName = 'proto.api.ObjectsInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectsStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsStateRequest.displayName = 'proto.api.ObjectsStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResolveTagRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResolveTagRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ResolveTagRequest.displayName = 'proto.api.ResolveTagRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResolveTagResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResolveTagResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ResolveTagResponse.displayName = 'proto.api.ResolveTagResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResolveAllTagsMapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResolveAllTagsMapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ResolveAllTagsMapRequest.displayName = 'proto.api.ResolveAllTagsMapRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResolveAllTagsMapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResolveAllTagsMapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ResolveAllTagsMapResponse.displayName = 'proto.api.ResolveAllTagsMapResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.TagsMapElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.TagsMapElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.TagsMapElement.displayName = 'proto.api.TagsMapElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectsStateResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectsStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsStateResponse.displayName = 'proto.api.ObjectsStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsEventsRangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectsEventsRangeResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectsEventsRangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsEventsRangeResponse.displayName = 'proto.api.ObjectsEventsRangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsEventsStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ObjectsEventsStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsEventsStreamResponse.displayName = 'proto.api.ObjectsEventsStreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ObjectsInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ObjectsInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ObjectsInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ObjectsInfoResponse.displayName = 'proto.api.ObjectsInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeviceSensors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeviceSensors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DeviceSensors.displayName = 'proto.api.DeviceSensors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.TaggedPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.TaggedPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.TaggedPoint.displayName = 'proto.api.TaggedPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ClosestPointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ClosestPointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ClosestPointsRequest.displayName = 'proto.api.ClosestPointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointEdges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PointEdges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointEdges.displayName = 'proto.api.PointEdges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ClosestPointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ClosestPointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ClosestPointsResponse.displayName = 'proto.api.ClosestPointsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetVehiclesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetVehiclesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetVehiclesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetVehiclesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetVehiclesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystemsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetVehiclesRequest}
 */
proto.api.GetVehiclesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetVehiclesRequest;
  return proto.api.GetVehiclesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetVehiclesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetVehiclesRequest}
 */
proto.api.GetVehiclesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubsystems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetVehiclesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetVehiclesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetVehiclesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetVehiclesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string Subsystems = 1;
 * @return {!Array<string>}
 */
proto.api.GetVehiclesRequest.prototype.getSubsystemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.GetVehiclesRequest} returns this
 */
proto.api.GetVehiclesRequest.prototype.setSubsystemsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.GetVehiclesRequest} returns this
 */
proto.api.GetVehiclesRequest.prototype.addSubsystems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetVehiclesRequest} returns this
 */
proto.api.GetVehiclesRequest.prototype.clearSubsystemsList = function() {
  return this.setSubsystemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetDevicesRequest.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetDevicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetDevicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetDevicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetDevicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystemsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    withunregistered: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    bnsocode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    unitsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetDevicesRequest}
 */
proto.api.GetDevicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetDevicesRequest;
  return proto.api.GetDevicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetDevicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetDevicesRequest}
 */
proto.api.GetDevicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubsystems(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithunregistered(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBnsocode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUnits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetDevicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetDevicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetDevicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetDevicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getWithunregistered();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBnsocode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUnitsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * repeated string Subsystems = 1;
 * @return {!Array<string>}
 */
proto.api.GetDevicesRequest.prototype.getSubsystemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.setSubsystemsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.addSubsystems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.clearSubsystemsList = function() {
  return this.setSubsystemsList([]);
};


/**
 * optional bool WithUnregistered = 2;
 * @return {boolean}
 */
proto.api.GetDevicesRequest.prototype.getWithunregistered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.setWithunregistered = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string BnsoCode = 3;
 * @return {string}
 */
proto.api.GetDevicesRequest.prototype.getBnsocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.setBnsocode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string Units = 4;
 * @return {!Array<string>}
 */
proto.api.GetDevicesRequest.prototype.getUnitsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.setUnitsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.addUnits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetDevicesRequest} returns this
 */
proto.api.GetDevicesRequest.prototype.clearUnitsList = function() {
  return this.setUnitsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetVehiclesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetVehiclesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetVehiclesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetVehiclesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetVehiclesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vehiclesList: jspb.Message.toObjectList(msg.getVehiclesList(),
    proto.api.Vehicle.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetVehiclesResponse}
 */
proto.api.GetVehiclesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetVehiclesResponse;
  return proto.api.GetVehiclesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetVehiclesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetVehiclesResponse}
 */
proto.api.GetVehiclesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Vehicle;
      reader.readMessage(value,proto.api.Vehicle.deserializeBinaryFromReader);
      msg.addVehicles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetVehiclesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetVehiclesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetVehiclesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetVehiclesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVehiclesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Vehicle.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vehicle Vehicles = 1;
 * @return {!Array<!proto.api.Vehicle>}
 */
proto.api.GetVehiclesResponse.prototype.getVehiclesList = function() {
  return /** @type{!Array<!proto.api.Vehicle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Vehicle, 1));
};


/**
 * @param {!Array<!proto.api.Vehicle>} value
 * @return {!proto.api.GetVehiclesResponse} returns this
*/
proto.api.GetVehiclesResponse.prototype.setVehiclesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Vehicle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Vehicle}
 */
proto.api.GetVehiclesResponse.prototype.addVehicles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Vehicle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetVehiclesResponse} returns this
 */
proto.api.GetVehiclesResponse.prototype.clearVehiclesList = function() {
  return this.setVehiclesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GetDevicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetDevicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetDevicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetDevicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetDevicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicesList: jspb.Message.toObjectList(msg.getDevicesList(),
    proto.api.Device.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetDevicesResponse}
 */
proto.api.GetDevicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetDevicesResponse;
  return proto.api.GetDevicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetDevicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetDevicesResponse}
 */
proto.api.GetDevicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Device;
      reader.readMessage(value,proto.api.Device.deserializeBinaryFromReader);
      msg.addDevices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetDevicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetDevicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetDevicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetDevicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Device.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Device Devices = 1;
 * @return {!Array<!proto.api.Device>}
 */
proto.api.GetDevicesResponse.prototype.getDevicesList = function() {
  return /** @type{!Array<!proto.api.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Device, 1));
};


/**
 * @param {!Array<!proto.api.Device>} value
 * @return {!proto.api.GetDevicesResponse} returns this
*/
proto.api.GetDevicesResponse.prototype.setDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Device}
 */
proto.api.GetDevicesResponse.prototype.addDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Device, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.GetDevicesResponse} returns this
 */
proto.api.GetDevicesResponse.prototype.clearDevicesList = function() {
  return this.setDevicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Vehicle.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Vehicle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Vehicle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Vehicle.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicecode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statenumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vehiclemark: jspb.Message.getFieldWithDefault(msg, 4, ""),
    vehiclemodel: jspb.Message.getFieldWithDefault(msg, 5, ""),
    unitinn: jspb.Message.getFieldWithDefault(msg, 6, ""),
    vehicleuuid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Vehicle}
 */
proto.api.Vehicle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Vehicle;
  return proto.api.Vehicle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Vehicle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Vehicle}
 */
proto.api.Vehicle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatenumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehiclemark(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehiclemodel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitinn(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehicleuuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Vehicle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Vehicle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Vehicle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Vehicle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatenumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVehiclemark();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVehiclemodel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnitinn();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVehicleuuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string Subsystem = 1;
 * @return {string}
 */
proto.api.Vehicle.prototype.getSubsystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string DeviceCode = 2;
 * @return {string}
 */
proto.api.Vehicle.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string StateNumber = 3;
 * @return {string}
 */
proto.api.Vehicle.prototype.getStatenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setStatenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string VehicleMark = 4;
 * @return {string}
 */
proto.api.Vehicle.prototype.getVehiclemark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setVehiclemark = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string VehicleModel = 5;
 * @return {string}
 */
proto.api.Vehicle.prototype.getVehiclemodel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setVehiclemodel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string UnitINN = 6;
 * @return {string}
 */
proto.api.Vehicle.prototype.getUnitinn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setUnitinn = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string VehicleUUID = 7;
 * @return {string}
 */
proto.api.Vehicle.prototype.getVehicleuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Vehicle} returns this
 */
proto.api.Vehicle.prototype.setVehicleuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subsystem: jspb.Message.getFieldWithDefault(msg, 3, ""),
    unitinn: jspb.Message.getFieldWithDefault(msg, 5, ""),
    unitname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastpoint: (f = msg.getLastpoint()) && proto.api.DataPoint.toObject(includeInstance, f),
    serialnumber: jspb.Message.getFieldWithDefault(msg, 8, ""),
    simcardnumber: jspb.Message.getFieldWithDefault(msg, 9, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bnsotypename: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bnsomanufacturername: jspb.Message.getFieldWithDefault(msg, 12, ""),
    bnsomobileoperatorname: jspb.Message.getFieldWithDefault(msg, 13, ""),
    softwareversion: jspb.Message.getFieldWithDefault(msg, 14, ""),
    isinstalled: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isapproved: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Device}
 */
proto.api.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Device;
  return proto.api.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Device}
 */
proto.api.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatenumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubsystem(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitinn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitname(value);
      break;
    case 7:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.setLastpoint(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialnumber(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSimcardnumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBnsotypename(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBnsomanufacturername(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBnsomobileoperatorname(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSoftwareversion(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinstalled(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsapproved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubsystem();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUnitinn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnitname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastpoint();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getSerialnumber();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSimcardnumber();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBnsotypename();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBnsomanufacturername();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBnsomobileoperatorname();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSoftwareversion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIsinstalled();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsapproved();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.Device.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string StateNumber = 2;
 * @return {string}
 */
proto.api.Device.prototype.getStatenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setStatenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Subsystem = 3;
 * @return {string}
 */
proto.api.Device.prototype.getSubsystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string UnitINN = 5;
 * @return {string}
 */
proto.api.Device.prototype.getUnitinn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setUnitinn = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string UnitName = 6;
 * @return {string}
 */
proto.api.Device.prototype.getUnitname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setUnitname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional DataPoint LastPoint = 7;
 * @return {?proto.api.DataPoint}
 */
proto.api.Device.prototype.getLastpoint = function() {
  return /** @type{?proto.api.DataPoint} */ (
    jspb.Message.getWrapperField(this, proto.api.DataPoint, 7));
};


/**
 * @param {?proto.api.DataPoint|undefined} value
 * @return {!proto.api.Device} returns this
*/
proto.api.Device.prototype.setLastpoint = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.clearLastpoint = function() {
  return this.setLastpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Device.prototype.hasLastpoint = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string SerialNumber = 8;
 * @return {string}
 */
proto.api.Device.prototype.getSerialnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setSerialnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string SimCardNumber = 9;
 * @return {string}
 */
proto.api.Device.prototype.getSimcardnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setSimcardnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string PhoneNumber = 10;
 * @return {string}
 */
proto.api.Device.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string BnsoTypeName = 11;
 * @return {string}
 */
proto.api.Device.prototype.getBnsotypename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setBnsotypename = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string BnsoManufacturerName = 12;
 * @return {string}
 */
proto.api.Device.prototype.getBnsomanufacturername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setBnsomanufacturername = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string BnsoMobileOperatorName = 13;
 * @return {string}
 */
proto.api.Device.prototype.getBnsomobileoperatorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setBnsomobileoperatorname = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string SoftwareVersion = 14;
 * @return {string}
 */
proto.api.Device.prototype.getSoftwareversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setSoftwareversion = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool IsInstalled = 15;
 * @return {boolean}
 */
proto.api.Device.prototype.getIsinstalled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setIsinstalled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool IsApproved = 16;
 * @return {boolean}
 */
proto.api.Device.prototype.getIsapproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.Device} returns this
 */
proto.api.Device.prototype.setIsapproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ModelUpdatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ModelUpdatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ModelUpdatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ModelUpdatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    datefrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uuidoffset: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ModelUpdatesRequest}
 */
proto.api.ModelUpdatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ModelUpdatesRequest;
  return proto.api.ModelUpdatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ModelUpdatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ModelUpdatesRequest}
 */
proto.api.ModelUpdatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.ModelUpdatesRequest.ModelType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatefrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuidoffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ModelUpdatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ModelUpdatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ModelUpdatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ModelUpdatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDatefrom();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUuidoffset();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.api.ModelUpdatesRequest.ModelType = {
  UNKNOWN: 0,
  VEHICLES: 1,
  BNSOS: 2
};

/**
 * optional ModelType Type = 1;
 * @return {!proto.api.ModelUpdatesRequest.ModelType}
 */
proto.api.ModelUpdatesRequest.prototype.getType = function() {
  return /** @type {!proto.api.ModelUpdatesRequest.ModelType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.ModelUpdatesRequest.ModelType} value
 * @return {!proto.api.ModelUpdatesRequest} returns this
 */
proto.api.ModelUpdatesRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 DateFrom = 2;
 * @return {number}
 */
proto.api.ModelUpdatesRequest.prototype.getDatefrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ModelUpdatesRequest} returns this
 */
proto.api.ModelUpdatesRequest.prototype.setDatefrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 Limit = 3;
 * @return {number}
 */
proto.api.ModelUpdatesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ModelUpdatesRequest} returns this
 */
proto.api.ModelUpdatesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string UuidOffset = 4;
 * @return {string}
 */
proto.api.ModelUpdatesRequest.prototype.getUuidoffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ModelUpdatesRequest} returns this
 */
proto.api.ModelUpdatesRequest.prototype.setUuidoffset = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ModelUpdatesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ModelUpdatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ModelUpdatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ModelUpdatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ModelUpdatesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_protobuf_struct_pb.Struct.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ModelUpdatesResponse}
 */
proto.api.ModelUpdatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ModelUpdatesResponse;
  return proto.api.ModelUpdatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ModelUpdatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ModelUpdatesResponse}
 */
proto.api.ModelUpdatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ModelUpdatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ModelUpdatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ModelUpdatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ModelUpdatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Struct Values = 2;
 * @return {!Array<!proto.google.protobuf.Struct>}
 */
proto.api.ModelUpdatesResponse.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.protobuf.Struct>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Struct>} value
 * @return {!proto.api.ModelUpdatesResponse} returns this
*/
proto.api.ModelUpdatesResponse.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Struct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Struct}
 */
proto.api.ModelUpdatesResponse.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Struct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ModelUpdatesResponse} returns this
 */
proto.api.ModelUpdatesResponse.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.DataFilter.repeatedFields_ = [1,5,6,7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DataFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DataFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DataFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DataFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecodeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    statenumberList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    subsystemList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    excludedevicecodeList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    vehicleuuidList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    unituuidList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    datefrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dateto: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DataFilter}
 */
proto.api.DataFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DataFilter;
  return proto.api.DataFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DataFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DataFilter}
 */
proto.api.DataFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDevicecode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatenumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubsystem(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addExcludedevicecode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addVehicleuuid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addUnituuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatefrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateto(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DataFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DataFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DataFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DataFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getStatenumberList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getSubsystemList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getExcludedevicecodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getVehicleuuidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getUnituuidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getDatefrom();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDateto();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated string DeviceCode = 1;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getDevicecodeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setDevicecodeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addDevicecode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearDevicecodeList = function() {
  return this.setDevicecodeList([]);
};


/**
 * repeated string StateNumber = 5;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getStatenumberList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setStatenumberList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addStatenumber = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearStatenumberList = function() {
  return this.setStatenumberList([]);
};


/**
 * repeated string Subsystem = 6;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getSubsystemList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setSubsystemList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addSubsystem = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearSubsystemList = function() {
  return this.setSubsystemList([]);
};


/**
 * repeated string ExcludeDeviceCode = 7;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getExcludedevicecodeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setExcludedevicecodeList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addExcludedevicecode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearExcludedevicecodeList = function() {
  return this.setExcludedevicecodeList([]);
};


/**
 * repeated string VehicleUUID = 8;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getVehicleuuidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setVehicleuuidList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addVehicleuuid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearVehicleuuidList = function() {
  return this.setVehicleuuidList([]);
};


/**
 * repeated string UnitUUID = 9;
 * @return {!Array<string>}
 */
proto.api.DataFilter.prototype.getUnituuidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setUnituuidList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.addUnituuid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.clearUnituuidList = function() {
  return this.setUnituuidList([]);
};


/**
 * optional int64 DateFrom = 2;
 * @return {number}
 */
proto.api.DataFilter.prototype.getDatefrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setDatefrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 DateTo = 3;
 * @return {number}
 */
proto.api.DataFilter.prototype.getDateto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setDateto = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 Limit = 4;
 * @return {number}
 */
proto.api.DataFilter.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataFilter} returns this
 */
proto.api.DataFilter.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FieldsToggle.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FieldsToggle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FieldsToggle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FieldsToggle.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ignition: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    motohours: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    mileage: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fuel: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    speedlimit: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    moving: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    ports: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    address: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    coordinates: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FieldsToggle}
 */
proto.api.FieldsToggle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FieldsToggle;
  return proto.api.FieldsToggle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FieldsToggle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FieldsToggle}
 */
proto.api.FieldsToggle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPosition(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnition(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMotohours(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMileage(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFuel(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpeedlimit(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoving(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPorts(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddress(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FieldsToggle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FieldsToggle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FieldsToggle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FieldsToggle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIgnition();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMotohours();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMileage();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFuel();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSpeedlimit();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMoving();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getPorts();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAddress();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCoordinates();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional bool Position = 1;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getPosition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setPosition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Ignition = 2;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getIgnition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setIgnition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool Motohours = 3;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getMotohours = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setMotohours = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool Mileage = 4;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getMileage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setMileage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool Fuel = 5;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getFuel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setFuel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool SpeedLimit = 6;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getSpeedlimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setSpeedlimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool Moving = 7;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getMoving = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setMoving = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool Ports = 8;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getPorts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setPorts = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool Address = 9;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getAddress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setAddress = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool Coordinates = 10;
 * @return {boolean}
 */
proto.api.FieldsToggle.prototype.getCoordinates = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.FieldsToggle} returns this
 */
proto.api.FieldsToggle.prototype.setCoordinates = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.BoundingBox.prototype.toObject = function(opt_includeInstance) {
  return proto.api.BoundingBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.BoundingBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BoundingBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    topleftlatitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    topleftlongitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    rightbottomlatitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    rightbottomlongitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.BoundingBox}
 */
proto.api.BoundingBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.BoundingBox;
  return proto.api.BoundingBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.BoundingBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.BoundingBox}
 */
proto.api.BoundingBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTopleftlatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTopleftlongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRightbottomlatitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRightbottomlongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.BoundingBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.BoundingBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.BoundingBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.BoundingBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopleftlatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getTopleftlongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRightbottomlatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getRightbottomlongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double TopLeftLatitude = 1;
 * @return {number}
 */
proto.api.BoundingBox.prototype.getTopleftlatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BoundingBox} returns this
 */
proto.api.BoundingBox.prototype.setTopleftlatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double TopLeftLongitude = 2;
 * @return {number}
 */
proto.api.BoundingBox.prototype.getTopleftlongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BoundingBox} returns this
 */
proto.api.BoundingBox.prototype.setTopleftlongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double RightBottomLatitude = 3;
 * @return {number}
 */
proto.api.BoundingBox.prototype.getRightbottomlatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BoundingBox} returns this
 */
proto.api.BoundingBox.prototype.setRightbottomlatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double RightBottomLongitude = 4;
 * @return {number}
 */
proto.api.BoundingBox.prototype.getRightbottomlongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.BoundingBox} returns this
 */
proto.api.BoundingBox.prototype.setRightbottomlongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsDataRangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsDataRangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsDataRangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataRangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.DataFilter.toObject(includeInstance, f),
    fields: (f = msg.getFields()) && proto.api.FieldsToggle.toObject(includeInstance, f),
    boundingbox: (f = msg.getBoundingbox()) && proto.api.BoundingBox.toObject(includeInstance, f),
    splitbyperiods: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsDataRangeRequest}
 */
proto.api.ObjectsDataRangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsDataRangeRequest;
  return proto.api.ObjectsDataRangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsDataRangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsDataRangeRequest}
 */
proto.api.ObjectsDataRangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataFilter;
      reader.readMessage(value,proto.api.DataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new proto.api.FieldsToggle;
      reader.readMessage(value,proto.api.FieldsToggle.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    case 3:
      var value = new proto.api.BoundingBox;
      reader.readMessage(value,proto.api.BoundingBox.deserializeBinaryFromReader);
      msg.setBoundingbox(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSplitbyperiods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsDataRangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsDataRangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsDataRangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataRangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataFilter.serializeBinaryToWriter
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.FieldsToggle.serializeBinaryToWriter
    );
  }
  f = message.getBoundingbox();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.BoundingBox.serializeBinaryToWriter
    );
  }
  f = message.getSplitbyperiods();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional DataFilter Filter = 1;
 * @return {?proto.api.DataFilter}
 */
proto.api.ObjectsDataRangeRequest.prototype.getFilter = function() {
  return /** @type{?proto.api.DataFilter} */ (
    jspb.Message.getWrapperField(this, proto.api.DataFilter, 1));
};


/**
 * @param {?proto.api.DataFilter|undefined} value
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
*/
proto.api.ObjectsDataRangeRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
 */
proto.api.ObjectsDataRangeRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataRangeRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldsToggle Fields = 2;
 * @return {?proto.api.FieldsToggle}
 */
proto.api.ObjectsDataRangeRequest.prototype.getFields = function() {
  return /** @type{?proto.api.FieldsToggle} */ (
    jspb.Message.getWrapperField(this, proto.api.FieldsToggle, 2));
};


/**
 * @param {?proto.api.FieldsToggle|undefined} value
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
*/
proto.api.ObjectsDataRangeRequest.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
 */
proto.api.ObjectsDataRangeRequest.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataRangeRequest.prototype.hasFields = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BoundingBox BoundingBox = 3;
 * @return {?proto.api.BoundingBox}
 */
proto.api.ObjectsDataRangeRequest.prototype.getBoundingbox = function() {
  return /** @type{?proto.api.BoundingBox} */ (
    jspb.Message.getWrapperField(this, proto.api.BoundingBox, 3));
};


/**
 * @param {?proto.api.BoundingBox|undefined} value
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
*/
proto.api.ObjectsDataRangeRequest.prototype.setBoundingbox = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
 */
proto.api.ObjectsDataRangeRequest.prototype.clearBoundingbox = function() {
  return this.setBoundingbox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataRangeRequest.prototype.hasBoundingbox = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool SplitByPeriods = 4;
 * @return {boolean}
 */
proto.api.ObjectsDataRangeRequest.prototype.getSplitbyperiods = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectsDataRangeRequest} returns this
 */
proto.api.ObjectsDataRangeRequest.prototype.setSplitbyperiods = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectsDataRangeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsDataRangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsDataRangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsDataRangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataRangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.api.ObjectData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsDataRangeResponse}
 */
proto.api.ObjectsDataRangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsDataRangeResponse;
  return proto.api.ObjectsDataRangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsDataRangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsDataRangeResponse}
 */
proto.api.ObjectsDataRangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ObjectData;
      reader.readMessage(value,proto.api.ObjectData.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsDataRangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsDataRangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsDataRangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataRangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.ObjectData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ObjectData Objects = 1;
 * @return {!Array<!proto.api.ObjectData>}
 */
proto.api.ObjectsDataRangeResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.api.ObjectData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ObjectData, 1));
};


/**
 * @param {!Array<!proto.api.ObjectData>} value
 * @return {!proto.api.ObjectsDataRangeResponse} returns this
*/
proto.api.ObjectsDataRangeResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.ObjectData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ObjectData}
 */
proto.api.ObjectsDataRangeResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.ObjectData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectsDataRangeResponse} returns this
 */
proto.api.ObjectsDataRangeResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectData.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectData.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statenumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.api.DataPoint.toObject, includeInstance),
    metadata: (f = msg.getMetadata()) && proto.api.ObjectMetadata.toObject(includeInstance, f),
    vehicleuuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    datefrom: jspb.Message.getFieldWithDefault(msg, 6, 0),
    dateto: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectData}
 */
proto.api.ObjectData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectData;
  return proto.api.ObjectData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectData}
 */
proto.api.ObjectData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatenumber(value);
      break;
    case 2:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 3:
      var value = new proto.api.ObjectMetadata;
      reader.readMessage(value,proto.api.ObjectMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehicleuuid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatefrom(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatenumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.ObjectMetadata.serializeBinaryToWriter
    );
  }
  f = message.getVehicleuuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDatefrom();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDateto();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.ObjectData.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string StateNumber = 4;
 * @return {string}
 */
proto.api.ObjectData.prototype.getStatenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.setStatenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated DataPoint Data = 2;
 * @return {!Array<!proto.api.DataPoint>}
 */
proto.api.ObjectData.prototype.getDataList = function() {
  return /** @type{!Array<!proto.api.DataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DataPoint, 2));
};


/**
 * @param {!Array<!proto.api.DataPoint>} value
 * @return {!proto.api.ObjectData} returns this
*/
proto.api.ObjectData.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.DataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.DataPoint}
 */
proto.api.ObjectData.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.DataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional ObjectMetadata Metadata = 3;
 * @return {?proto.api.ObjectMetadata}
 */
proto.api.ObjectData.prototype.getMetadata = function() {
  return /** @type{?proto.api.ObjectMetadata} */ (
    jspb.Message.getWrapperField(this, proto.api.ObjectMetadata, 3));
};


/**
 * @param {?proto.api.ObjectMetadata|undefined} value
 * @return {!proto.api.ObjectData} returns this
*/
proto.api.ObjectData.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectData.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string VehicleUUID = 5;
 * @return {string}
 */
proto.api.ObjectData.prototype.getVehicleuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.setVehicleuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 DateFrom = 6;
 * @return {number}
 */
proto.api.ObjectData.prototype.getDatefrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.setDatefrom = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 DateTo = 7;
 * @return {number}
 */
proto.api.ObjectData.prototype.getDateto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectData} returns this
 */
proto.api.ObjectData.prototype.setDateto = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    driver: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectMetadata}
 */
proto.api.ObjectMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectMetadata;
  return proto.api.ObjectMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectMetadata}
 */
proto.api.ObjectMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriver(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDriver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Label = 1;
 * @return {string}
 */
proto.api.ObjectMetadata.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectMetadata} returns this
 */
proto.api.ObjectMetadata.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Driver = 2;
 * @return {string}
 */
proto.api.ObjectMetadata.prototype.getDriver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectMetadata} returns this
 */
proto.api.ObjectMetadata.prototype.setDriver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicetime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    position: (f = msg.getPosition()) && proto.api.GpsData.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.api.ObjectState.toObject(includeInstance, f),
    receivedtime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fueltanksMap: (f = msg.getFueltanksMap()) ? f.toObject(includeInstance, undefined) : [],
    accelerations: (f = msg.getAccelerations()) && proto.api.Accelerations.toObject(includeInstance, f),
    fuelspent: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    endpoint: jspb.Message.getFieldWithDefault(msg, 9, ""),
    protocol: jspb.Message.getFieldWithDefault(msg, 10, ""),
    vehicleinfo: (f = msg.getVehicleinfo()) && proto.api.VehicleInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DataPoint}
 */
proto.api.DataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DataPoint;
  return proto.api.DataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DataPoint}
 */
proto.api.DataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDevicetime(value);
      break;
    case 3:
      var value = new proto.api.GpsData;
      reader.readMessage(value,proto.api.GpsData.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 4:
      var value = new proto.api.ObjectState;
      reader.readMessage(value,proto.api.ObjectState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedtime(value);
      break;
    case 6:
      var value = msg.getFueltanksMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readDouble, null, 0, 0.0);
         });
      break;
    case 7:
      var value = new proto.api.Accelerations;
      reader.readMessage(value,proto.api.Accelerations.deserializeBinaryFromReader);
      msg.setAccelerations(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFuelspent(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocol(value);
      break;
    case 11:
      var value = new proto.api.VehicleInfo;
      reader.readMessage(value,proto.api.VehicleInfo.deserializeBinaryFromReader);
      msg.setVehicleinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicetime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.GpsData.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.ObjectState.serializeBinaryToWriter
    );
  }
  f = message.getReceivedtime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getFueltanksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeDouble);
  }
  f = message.getAccelerations();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.Accelerations.serializeBinaryToWriter
    );
  }
  f = message.getFuelspent();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProtocol();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getVehicleinfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.api.VehicleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.DataPoint.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 DeviceTime = 2;
 * @return {number}
 */
proto.api.DataPoint.prototype.getDevicetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setDevicetime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional GpsData Position = 3;
 * @return {?proto.api.GpsData}
 */
proto.api.DataPoint.prototype.getPosition = function() {
  return /** @type{?proto.api.GpsData} */ (
    jspb.Message.getWrapperField(this, proto.api.GpsData, 3));
};


/**
 * @param {?proto.api.GpsData|undefined} value
 * @return {!proto.api.DataPoint} returns this
*/
proto.api.DataPoint.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DataPoint.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ObjectState State = 4;
 * @return {?proto.api.ObjectState}
 */
proto.api.DataPoint.prototype.getState = function() {
  return /** @type{?proto.api.ObjectState} */ (
    jspb.Message.getWrapperField(this, proto.api.ObjectState, 4));
};


/**
 * @param {?proto.api.ObjectState|undefined} value
 * @return {!proto.api.DataPoint} returns this
*/
proto.api.DataPoint.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DataPoint.prototype.hasState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 ReceivedTime = 5;
 * @return {number}
 */
proto.api.DataPoint.prototype.getReceivedtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setReceivedtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * map<int32, double> FuelTanks = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.api.DataPoint.prototype.getFueltanksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.clearFueltanksMap = function() {
  this.getFueltanksMap().clear();
  return this;};


/**
 * optional Accelerations Accelerations = 7;
 * @return {?proto.api.Accelerations}
 */
proto.api.DataPoint.prototype.getAccelerations = function() {
  return /** @type{?proto.api.Accelerations} */ (
    jspb.Message.getWrapperField(this, proto.api.Accelerations, 7));
};


/**
 * @param {?proto.api.Accelerations|undefined} value
 * @return {!proto.api.DataPoint} returns this
*/
proto.api.DataPoint.prototype.setAccelerations = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.clearAccelerations = function() {
  return this.setAccelerations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DataPoint.prototype.hasAccelerations = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double FuelSpent = 8;
 * @return {number}
 */
proto.api.DataPoint.prototype.getFuelspent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setFuelspent = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string Endpoint = 9;
 * @return {string}
 */
proto.api.DataPoint.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string Protocol = 10;
 * @return {string}
 */
proto.api.DataPoint.prototype.getProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional VehicleInfo VehicleInfo = 11;
 * @return {?proto.api.VehicleInfo}
 */
proto.api.DataPoint.prototype.getVehicleinfo = function() {
  return /** @type{?proto.api.VehicleInfo} */ (
    jspb.Message.getWrapperField(this, proto.api.VehicleInfo, 11));
};


/**
 * @param {?proto.api.VehicleInfo|undefined} value
 * @return {!proto.api.DataPoint} returns this
*/
proto.api.DataPoint.prototype.setVehicleinfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DataPoint} returns this
 */
proto.api.DataPoint.prototype.clearVehicleinfo = function() {
  return this.setVehicleinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DataPoint.prototype.hasVehicleinfo = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.VehicleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.VehicleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.VehicleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.VehicleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeuuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    routenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vehicletype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vehicleuuid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.VehicleInfo}
 */
proto.api.VehicleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.VehicleInfo;
  return proto.api.VehicleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.VehicleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.VehicleInfo}
 */
proto.api.VehicleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteuuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoutenumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehicletype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehicleuuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.VehicleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.VehicleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.VehicleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.VehicleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteuuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoutenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVehicletype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVehicleuuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string RouteUUID = 1;
 * @return {string}
 */
proto.api.VehicleInfo.prototype.getRouteuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.VehicleInfo} returns this
 */
proto.api.VehicleInfo.prototype.setRouteuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string RouteNumber = 2;
 * @return {string}
 */
proto.api.VehicleInfo.prototype.getRoutenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.VehicleInfo} returns this
 */
proto.api.VehicleInfo.prototype.setRoutenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string VehicleType = 3;
 * @return {string}
 */
proto.api.VehicleInfo.prototype.getVehicletype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.VehicleInfo} returns this
 */
proto.api.VehicleInfo.prototype.setVehicletype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string VehicleUUID = 4;
 * @return {string}
 */
proto.api.VehicleInfo.prototype.getVehicleuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.VehicleInfo} returns this
 */
proto.api.VehicleInfo.prototype.setVehicleuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointBundle.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointBundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointBundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointBundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.api.DataPoint.toObject(includeInstance, f),
    ignition: (f = msg.getIgnition()) && proto.api.DataPoint.toObject(includeInstance, f),
    moving: (f = msg.getMoving()) && proto.api.DataPoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointBundle}
 */
proto.api.PointBundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointBundle;
  return proto.api.PointBundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointBundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointBundle}
 */
proto.api.PointBundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.setIgnition(value);
      break;
    case 3:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.setMoving(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointBundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointBundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointBundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointBundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getIgnition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getMoving();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataPoint Position = 1;
 * @return {?proto.api.DataPoint}
 */
proto.api.PointBundle.prototype.getPosition = function() {
  return /** @type{?proto.api.DataPoint} */ (
    jspb.Message.getWrapperField(this, proto.api.DataPoint, 1));
};


/**
 * @param {?proto.api.DataPoint|undefined} value
 * @return {!proto.api.PointBundle} returns this
*/
proto.api.PointBundle.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PointBundle} returns this
 */
proto.api.PointBundle.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PointBundle.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DataPoint Ignition = 2;
 * @return {?proto.api.DataPoint}
 */
proto.api.PointBundle.prototype.getIgnition = function() {
  return /** @type{?proto.api.DataPoint} */ (
    jspb.Message.getWrapperField(this, proto.api.DataPoint, 2));
};


/**
 * @param {?proto.api.DataPoint|undefined} value
 * @return {!proto.api.PointBundle} returns this
*/
proto.api.PointBundle.prototype.setIgnition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PointBundle} returns this
 */
proto.api.PointBundle.prototype.clearIgnition = function() {
  return this.setIgnition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PointBundle.prototype.hasIgnition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DataPoint Moving = 3;
 * @return {?proto.api.DataPoint}
 */
proto.api.PointBundle.prototype.getMoving = function() {
  return /** @type{?proto.api.DataPoint} */ (
    jspb.Message.getWrapperField(this, proto.api.DataPoint, 3));
};


/**
 * @param {?proto.api.DataPoint|undefined} value
 * @return {!proto.api.PointBundle} returns this
*/
proto.api.PointBundle.prototype.setMoving = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PointBundle} returns this
 */
proto.api.PointBundle.prototype.clearMoving = function() {
  return this.setMoving(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PointBundle.prototype.hasMoving = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.HistorySequence.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.HistorySequence.prototype.toObject = function(opt_includeInstance) {
  return proto.api.HistorySequence.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.HistorySequence} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.HistorySequence.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    left: (f = msg.getLeft()) && proto.api.PointBundle.toObject(includeInstance, f),
    right: (f = msg.getRight()) && proto.api.PointBundle.toObject(includeInstance, f),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.api.DataPoint.toObject, includeInstance),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.HistorySequence}
 */
proto.api.HistorySequence.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.HistorySequence;
  return proto.api.HistorySequence.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.HistorySequence} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.HistorySequence}
 */
proto.api.HistorySequence.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 2:
      var value = new proto.api.PointBundle;
      reader.readMessage(value,proto.api.PointBundle.deserializeBinaryFromReader);
      msg.setLeft(value);
      break;
    case 3:
      var value = new proto.api.PointBundle;
      reader.readMessage(value,proto.api.PointBundle.deserializeBinaryFromReader);
      msg.setRight(value);
      break;
    case 4:
      var value = new proto.api.DataPoint;
      reader.readMessage(value,proto.api.DataPoint.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.HistorySequence.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.HistorySequence.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.HistorySequence} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.HistorySequence.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLeft();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.PointBundle.serializeBinaryToWriter
    );
  }
  f = message.getRight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.PointBundle.serializeBinaryToWriter
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.DataPoint.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.HistorySequence.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.HistorySequence} returns this
 */
proto.api.HistorySequence.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PointBundle Left = 2;
 * @return {?proto.api.PointBundle}
 */
proto.api.HistorySequence.prototype.getLeft = function() {
  return /** @type{?proto.api.PointBundle} */ (
    jspb.Message.getWrapperField(this, proto.api.PointBundle, 2));
};


/**
 * @param {?proto.api.PointBundle|undefined} value
 * @return {!proto.api.HistorySequence} returns this
*/
proto.api.HistorySequence.prototype.setLeft = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.HistorySequence} returns this
 */
proto.api.HistorySequence.prototype.clearLeft = function() {
  return this.setLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.HistorySequence.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PointBundle Right = 3;
 * @return {?proto.api.PointBundle}
 */
proto.api.HistorySequence.prototype.getRight = function() {
  return /** @type{?proto.api.PointBundle} */ (
    jspb.Message.getWrapperField(this, proto.api.PointBundle, 3));
};


/**
 * @param {?proto.api.PointBundle|undefined} value
 * @return {!proto.api.HistorySequence} returns this
*/
proto.api.HistorySequence.prototype.setRight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.HistorySequence} returns this
 */
proto.api.HistorySequence.prototype.clearRight = function() {
  return this.setRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.HistorySequence.prototype.hasRight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated DataPoint Points = 4;
 * @return {!Array<!proto.api.DataPoint>}
 */
proto.api.HistorySequence.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.api.DataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DataPoint, 4));
};


/**
 * @param {!Array<!proto.api.DataPoint>} value
 * @return {!proto.api.HistorySequence} returns this
*/
proto.api.HistorySequence.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.DataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.DataPoint}
 */
proto.api.HistorySequence.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.DataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.HistorySequence} returns this
 */
proto.api.HistorySequence.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * optional string UUID = 5;
 * @return {string}
 */
proto.api.HistorySequence.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.HistorySequence} returns this
 */
proto.api.HistorySequence.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Accelerations.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Accelerations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Accelerations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Accelerations.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Accelerations}
 */
proto.api.Accelerations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Accelerations;
  return proto.api.Accelerations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Accelerations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Accelerations}
 */
proto.api.Accelerations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Accelerations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Accelerations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Accelerations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Accelerations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double X = 1;
 * @return {number}
 */
proto.api.Accelerations.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.Accelerations} returns this
 */
proto.api.Accelerations.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double Y = 2;
 * @return {number}
 */
proto.api.Accelerations.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.Accelerations} returns this
 */
proto.api.Accelerations.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Z = 3;
 * @return {number}
 */
proto.api.Accelerations.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.Accelerations} returns this
 */
proto.api.Accelerations.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectState.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectState.toObject = function(includeInstance, msg) {
  var f, obj = {
    moving: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ignition: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    fuel: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    mileage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    motohours: jspb.Message.getFieldWithDefault(msg, 5, 0),
    speedlimit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    analogportsMap: (f = msg.getAnalogportsMap()) ? f.toObject(includeInstance, undefined) : [],
    digitalportsMap: (f = msg.getDigitalportsMap()) ? f.toObject(includeInstance, undefined) : [],
    address: jspb.Message.getFieldWithDefault(msg, 9, ""),
    voltageext: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    voltageint: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    panicbutton: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    motohourscalculated: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    linkqualitygsm: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    hasMoving: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    hasIgnition: jspb.Message.getBooleanFieldWithDefault(msg, 32, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectState}
 */
proto.api.ObjectState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectState;
  return proto.api.ObjectState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectState}
 */
proto.api.ObjectState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoving(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnition(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFuel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMileage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMotohours(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeedlimit(value);
      break;
    case 7:
      var value = msg.getAnalogportsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readDouble, null, 0, 0.0);
         });
      break;
    case 8:
      var value = msg.getDigitalportsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readBool, null, 0, false);
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVoltageext(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVoltageint(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPanicbutton(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMotohourscalculated(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLinkqualitygsm(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasMoving(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasIgnition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoving();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIgnition();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFuel();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMileage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getMotohours();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSpeedlimit();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAnalogportsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeDouble);
  }
  f = message.getDigitalportsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getVoltageext();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getVoltageint();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getPanicbutton();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getMotohourscalculated();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getLinkqualitygsm();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getHasMoving();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getHasIgnition();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
};


/**
 * optional bool Moving = 1;
 * @return {boolean}
 */
proto.api.ObjectState.prototype.getMoving = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setMoving = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Ignition = 2;
 * @return {boolean}
 */
proto.api.ObjectState.prototype.getIgnition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setIgnition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double Fuel = 3;
 * @return {number}
 */
proto.api.ObjectState.prototype.getFuel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setFuel = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double Mileage = 4;
 * @return {number}
 */
proto.api.ObjectState.prototype.getMileage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setMileage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 Motohours = 5;
 * @return {number}
 */
proto.api.ObjectState.prototype.getMotohours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setMotohours = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 SpeedLimit = 6;
 * @return {number}
 */
proto.api.ObjectState.prototype.getSpeedlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setSpeedlimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * map<int32, double> AnalogPorts = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.api.ObjectState.prototype.getAnalogportsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.clearAnalogportsMap = function() {
  this.getAnalogportsMap().clear();
  return this;};


/**
 * map<int32, bool> DigitalPorts = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,boolean>}
 */
proto.api.ObjectState.prototype.getDigitalportsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,boolean>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.clearDigitalportsMap = function() {
  this.getDigitalportsMap().clear();
  return this;};


/**
 * optional string Address = 9;
 * @return {string}
 */
proto.api.ObjectState.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional double VoltageExt = 10;
 * @return {number}
 */
proto.api.ObjectState.prototype.getVoltageext = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setVoltageext = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double VoltageInt = 11;
 * @return {number}
 */
proto.api.ObjectState.prototype.getVoltageint = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setVoltageint = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional bool PanicButton = 12;
 * @return {boolean}
 */
proto.api.ObjectState.prototype.getPanicbutton = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setPanicbutton = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional double Distance = 13;
 * @return {number}
 */
proto.api.ObjectState.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double MotohoursCalculated = 20;
 * @return {number}
 */
proto.api.ObjectState.prototype.getMotohourscalculated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setMotohourscalculated = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional double LinkQualityGSM = 21;
 * @return {number}
 */
proto.api.ObjectState.prototype.getLinkqualitygsm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setLinkqualitygsm = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional bool has_Moving = 31;
 * @return {boolean}
 */
proto.api.ObjectState.prototype.getHasMoving = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setHasMoving = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional bool has_Ignition = 32;
 * @return {boolean}
 */
proto.api.ObjectState.prototype.getHasIgnition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.ObjectState} returns this
 */
proto.api.ObjectState.prototype.setHasIgnition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GpsData.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GpsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GpsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GpsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    altitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    course: jspb.Message.getFieldWithDefault(msg, 4, 0),
    satellites: jspb.Message.getFieldWithDefault(msg, 5, 0),
    speed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    hdop: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GpsData}
 */
proto.api.GpsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GpsData;
  return proto.api.GpsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GpsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GpsData}
 */
proto.api.GpsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCourse(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSatellites(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHdop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GpsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GpsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GpsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GpsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAltitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCourse();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSatellites();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getHdop();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional double Longitude = 1;
 * @return {number}
 */
proto.api.GpsData.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double Latitude = 2;
 * @return {number}
 */
proto.api.GpsData.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Altitude = 3;
 * @return {number}
 */
proto.api.GpsData.prototype.getAltitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setAltitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 Course = 4;
 * @return {number}
 */
proto.api.GpsData.prototype.getCourse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setCourse = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 Satellites = 5;
 * @return {number}
 */
proto.api.GpsData.prototype.getSatellites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setSatellites = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 Speed = 6;
 * @return {number}
 */
proto.api.GpsData.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool Valid = 7;
 * @return {boolean}
 */
proto.api.GpsData.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 HDOP = 8;
 * @return {number}
 */
proto.api.GpsData.prototype.getHdop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.GpsData} returns this
 */
proto.api.GpsData.prototype.setHdop = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && proto.api.ObjectData.toObject(includeInstance, f),
    eventtype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventmetadataMap: (f = msg.getEventmetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Event}
 */
proto.api.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Event;
  return proto.api.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Event}
 */
proto.api.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ObjectData;
      reader.readMessage(value,proto.api.ObjectData.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventtype(value);
      break;
    case 15:
      var value = msg.getEventmetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.ObjectData.serializeBinaryToWriter
    );
  }
  f = message.getEventtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventmetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(15, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional ObjectData Object = 1;
 * @return {?proto.api.ObjectData}
 */
proto.api.Event.prototype.getObject = function() {
  return /** @type{?proto.api.ObjectData} */ (
    jspb.Message.getWrapperField(this, proto.api.ObjectData, 1));
};


/**
 * @param {?proto.api.ObjectData|undefined} value
 * @return {!proto.api.Event} returns this
*/
proto.api.Event.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Event} returns this
 */
proto.api.Event.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Event.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string EventType = 2;
 * @return {string}
 */
proto.api.Event.prototype.getEventtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.Event} returns this
 */
proto.api.Event.prototype.setEventtype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> EventMetadata = 15;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.api.Event.prototype.getEventmetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 15, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.Event} returns this
 */
proto.api.Event.prototype.clearEventmetadataMap = function() {
  this.getEventmetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsDataStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsDataStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsDataStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.DataFilter.toObject(includeInstance, f),
    fields: (f = msg.getFields()) && proto.api.FieldsToggle.toObject(includeInstance, f),
    boundingbox: (f = msg.getBoundingbox()) && proto.api.BoundingBox.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsDataStreamRequest}
 */
proto.api.ObjectsDataStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsDataStreamRequest;
  return proto.api.ObjectsDataStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsDataStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsDataStreamRequest}
 */
proto.api.ObjectsDataStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataFilter;
      reader.readMessage(value,proto.api.DataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new proto.api.FieldsToggle;
      reader.readMessage(value,proto.api.FieldsToggle.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    case 3:
      var value = new proto.api.BoundingBox;
      reader.readMessage(value,proto.api.BoundingBox.deserializeBinaryFromReader);
      msg.setBoundingbox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsDataStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsDataStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsDataStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsDataStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataFilter.serializeBinaryToWriter
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.FieldsToggle.serializeBinaryToWriter
    );
  }
  f = message.getBoundingbox();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.BoundingBox.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataFilter Filter = 1;
 * @return {?proto.api.DataFilter}
 */
proto.api.ObjectsDataStreamRequest.prototype.getFilter = function() {
  return /** @type{?proto.api.DataFilter} */ (
    jspb.Message.getWrapperField(this, proto.api.DataFilter, 1));
};


/**
 * @param {?proto.api.DataFilter|undefined} value
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
*/
proto.api.ObjectsDataStreamRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
 */
proto.api.ObjectsDataStreamRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataStreamRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldsToggle Fields = 2;
 * @return {?proto.api.FieldsToggle}
 */
proto.api.ObjectsDataStreamRequest.prototype.getFields = function() {
  return /** @type{?proto.api.FieldsToggle} */ (
    jspb.Message.getWrapperField(this, proto.api.FieldsToggle, 2));
};


/**
 * @param {?proto.api.FieldsToggle|undefined} value
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
*/
proto.api.ObjectsDataStreamRequest.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
 */
proto.api.ObjectsDataStreamRequest.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataStreamRequest.prototype.hasFields = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BoundingBox BoundingBox = 3;
 * @return {?proto.api.BoundingBox}
 */
proto.api.ObjectsDataStreamRequest.prototype.getBoundingbox = function() {
  return /** @type{?proto.api.BoundingBox} */ (
    jspb.Message.getWrapperField(this, proto.api.BoundingBox, 3));
};


/**
 * @param {?proto.api.BoundingBox|undefined} value
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
*/
proto.api.ObjectsDataStreamRequest.prototype.setBoundingbox = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsDataStreamRequest} returns this
 */
proto.api.ObjectsDataStreamRequest.prototype.clearBoundingbox = function() {
  return this.setBoundingbox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsDataStreamRequest.prototype.hasBoundingbox = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectsEventsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.DataFilter.toObject(includeInstance, f),
    eventsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsEventsRequest}
 */
proto.api.ObjectsEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsEventsRequest;
  return proto.api.ObjectsEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsEventsRequest}
 */
proto.api.ObjectsEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataFilter;
      reader.readMessage(value,proto.api.DataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataFilter.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional DataFilter Filter = 1;
 * @return {?proto.api.DataFilter}
 */
proto.api.ObjectsEventsRequest.prototype.getFilter = function() {
  return /** @type{?proto.api.DataFilter} */ (
    jspb.Message.getWrapperField(this, proto.api.DataFilter, 1));
};


/**
 * @param {?proto.api.DataFilter|undefined} value
 * @return {!proto.api.ObjectsEventsRequest} returns this
*/
proto.api.ObjectsEventsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsEventsRequest} returns this
 */
proto.api.ObjectsEventsRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsEventsRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string Events = 2;
 * @return {!Array<string>}
 */
proto.api.ObjectsEventsRequest.prototype.getEventsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.ObjectsEventsRequest} returns this
 */
proto.api.ObjectsEventsRequest.prototype.setEventsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.ObjectsEventsRequest} returns this
 */
proto.api.ObjectsEventsRequest.prototype.addEvents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectsEventsRequest} returns this
 */
proto.api.ObjectsEventsRequest.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.DataFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsInfoRequest}
 */
proto.api.ObjectsInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsInfoRequest;
  return proto.api.ObjectsInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsInfoRequest}
 */
proto.api.ObjectsInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataFilter;
      reader.readMessage(value,proto.api.DataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataFilter Filter = 1;
 * @return {?proto.api.DataFilter}
 */
proto.api.ObjectsInfoRequest.prototype.getFilter = function() {
  return /** @type{?proto.api.DataFilter} */ (
    jspb.Message.getWrapperField(this, proto.api.DataFilter, 1));
};


/**
 * @param {?proto.api.DataFilter|undefined} value
 * @return {!proto.api.ObjectsInfoRequest} returns this
*/
proto.api.ObjectsInfoRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsInfoRequest} returns this
 */
proto.api.ObjectsInfoRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsInfoRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.DataFilter.toObject(includeInstance, f),
    fields: (f = msg.getFields()) && proto.api.FieldsToggle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsStateRequest}
 */
proto.api.ObjectsStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsStateRequest;
  return proto.api.ObjectsStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsStateRequest}
 */
proto.api.ObjectsStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DataFilter;
      reader.readMessage(value,proto.api.DataFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new proto.api.FieldsToggle;
      reader.readMessage(value,proto.api.FieldsToggle.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DataFilter.serializeBinaryToWriter
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.FieldsToggle.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataFilter Filter = 1;
 * @return {?proto.api.DataFilter}
 */
proto.api.ObjectsStateRequest.prototype.getFilter = function() {
  return /** @type{?proto.api.DataFilter} */ (
    jspb.Message.getWrapperField(this, proto.api.DataFilter, 1));
};


/**
 * @param {?proto.api.DataFilter|undefined} value
 * @return {!proto.api.ObjectsStateRequest} returns this
*/
proto.api.ObjectsStateRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsStateRequest} returns this
 */
proto.api.ObjectsStateRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsStateRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldsToggle Fields = 2;
 * @return {?proto.api.FieldsToggle}
 */
proto.api.ObjectsStateRequest.prototype.getFields = function() {
  return /** @type{?proto.api.FieldsToggle} */ (
    jspb.Message.getWrapperField(this, proto.api.FieldsToggle, 2));
};


/**
 * @param {?proto.api.FieldsToggle|undefined} value
 * @return {!proto.api.ObjectsStateRequest} returns this
*/
proto.api.ObjectsStateRequest.prototype.setFields = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ObjectsStateRequest} returns this
 */
proto.api.ObjectsStateRequest.prototype.clearFields = function() {
  return this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ObjectsStateRequest.prototype.hasFields = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResolveTagRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResolveTagRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResolveTagRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveTagRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagtype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResolveTagRequest}
 */
proto.api.ResolveTagRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResolveTagRequest;
  return proto.api.ResolveTagRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResolveTagRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResolveTagRequest}
 */
proto.api.ResolveTagRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTagtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResolveTagRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ResolveTagRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ResolveTagRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveTagRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagtype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string TagName = 1;
 * @return {string}
 */
proto.api.ResolveTagRequest.prototype.getTagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ResolveTagRequest} returns this
 */
proto.api.ResolveTagRequest.prototype.setTagname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 TagType = 2;
 * @return {number}
 */
proto.api.ResolveTagRequest.prototype.getTagtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ResolveTagRequest} returns this
 */
proto.api.ResolveTagRequest.prototype.setTagtype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResolveTagResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResolveTagResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResolveTagResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveTagResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResolveTagResponse}
 */
proto.api.ResolveTagResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResolveTagResponse;
  return proto.api.ResolveTagResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResolveTagResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResolveTagResponse}
 */
proto.api.ResolveTagResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResolveTagResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ResolveTagResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ResolveTagResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveTagResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Tag = 1;
 * @return {number}
 */
proto.api.ResolveTagResponse.prototype.getTag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ResolveTagResponse} returns this
 */
proto.api.ResolveTagResponse.prototype.setTag = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResolveAllTagsMapRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResolveAllTagsMapRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResolveAllTagsMapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveAllTagsMapRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagtype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResolveAllTagsMapRequest}
 */
proto.api.ResolveAllTagsMapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResolveAllTagsMapRequest;
  return proto.api.ResolveAllTagsMapRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResolveAllTagsMapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResolveAllTagsMapRequest}
 */
proto.api.ResolveAllTagsMapRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTagtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResolveAllTagsMapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ResolveAllTagsMapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ResolveAllTagsMapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveAllTagsMapRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagtype();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string TagName = 1;
 * @return {string}
 */
proto.api.ResolveAllTagsMapRequest.prototype.getTagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ResolveAllTagsMapRequest} returns this
 */
proto.api.ResolveAllTagsMapRequest.prototype.setTagname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 TagType = 2;
 * @return {number}
 */
proto.api.ResolveAllTagsMapRequest.prototype.getTagtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ResolveAllTagsMapRequest} returns this
 */
proto.api.ResolveAllTagsMapRequest.prototype.setTagtype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResolveAllTagsMapResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResolveAllTagsMapResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResolveAllTagsMapResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveAllTagsMapResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mapMap: (f = msg.getMapMap()) ? f.toObject(includeInstance, proto.api.TagsMapElement.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResolveAllTagsMapResponse}
 */
proto.api.ResolveAllTagsMapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResolveAllTagsMapResponse;
  return proto.api.ResolveAllTagsMapResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResolveAllTagsMapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResolveAllTagsMapResponse}
 */
proto.api.ResolveAllTagsMapResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.api.TagsMapElement.deserializeBinaryFromReader, 0, new proto.api.TagsMapElement());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResolveAllTagsMapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ResolveAllTagsMapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ResolveAllTagsMapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResolveAllTagsMapResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.api.TagsMapElement.serializeBinaryToWriter);
  }
};


/**
 * map<uint32, TagsMapElement> Map = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.api.TagsMapElement>}
 */
proto.api.ResolveAllTagsMapResponse.prototype.getMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.api.TagsMapElement>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api.TagsMapElement));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.ResolveAllTagsMapResponse} returns this
 */
proto.api.ResolveAllTagsMapResponse.prototype.clearMapMap = function() {
  this.getMapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.TagsMapElement.prototype.toObject = function(opt_includeInstance) {
  return proto.api.TagsMapElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.TagsMapElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TagsMapElement.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagtype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.TagsMapElement}
 */
proto.api.TagsMapElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.TagsMapElement;
  return proto.api.TagsMapElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.TagsMapElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.TagsMapElement}
 */
proto.api.TagsMapElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTagtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.TagsMapElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.TagsMapElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.TagsMapElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TagsMapElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagtype();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string TagName = 1;
 * @return {string}
 */
proto.api.TagsMapElement.prototype.getTagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.TagsMapElement} returns this
 */
proto.api.TagsMapElement.prototype.setTagname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 TagType = 2;
 * @return {number}
 */
proto.api.TagsMapElement.prototype.getTagtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.TagsMapElement} returns this
 */
proto.api.TagsMapElement.prototype.setTagtype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectsStateResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.api.ObjectData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsStateResponse}
 */
proto.api.ObjectsStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsStateResponse;
  return proto.api.ObjectsStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsStateResponse}
 */
proto.api.ObjectsStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ObjectData;
      reader.readMessage(value,proto.api.ObjectData.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.ObjectData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ObjectData Objects = 1;
 * @return {!Array<!proto.api.ObjectData>}
 */
proto.api.ObjectsStateResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.api.ObjectData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ObjectData, 1));
};


/**
 * @param {!Array<!proto.api.ObjectData>} value
 * @return {!proto.api.ObjectsStateResponse} returns this
*/
proto.api.ObjectsStateResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.ObjectData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ObjectData}
 */
proto.api.ObjectsStateResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.ObjectData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectsStateResponse} returns this
 */
proto.api.ObjectsStateResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectsEventsRangeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsEventsRangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsEventsRangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsEventsRangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsRangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.api.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsEventsRangeResponse}
 */
proto.api.ObjectsEventsRangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsEventsRangeResponse;
  return proto.api.ObjectsEventsRangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsEventsRangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsEventsRangeResponse}
 */
proto.api.ObjectsEventsRangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Event;
      reader.readMessage(value,proto.api.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsEventsRangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsEventsRangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsEventsRangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsRangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Event.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event Events = 1;
 * @return {!Array<!proto.api.Event>}
 */
proto.api.ObjectsEventsRangeResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.api.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Event, 1));
};


/**
 * @param {!Array<!proto.api.Event>} value
 * @return {!proto.api.ObjectsEventsRangeResponse} returns this
*/
proto.api.ObjectsEventsRangeResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Event}
 */
proto.api.ObjectsEventsRangeResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectsEventsRangeResponse} returns this
 */
proto.api.ObjectsEventsRangeResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsEventsStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsEventsStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsEventsStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsEventsStreamResponse}
 */
proto.api.ObjectsEventsStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsEventsStreamResponse;
  return proto.api.ObjectsEventsStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsEventsStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsEventsStreamResponse}
 */
proto.api.ObjectsEventsStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsEventsStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsEventsStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsEventsStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsEventsStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ObjectsInfoResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ObjectsInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ObjectsInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ObjectsInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectsList: jspb.Message.toObjectList(msg.getObjectsList(),
    proto.api.ObjectData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ObjectsInfoResponse}
 */
proto.api.ObjectsInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ObjectsInfoResponse;
  return proto.api.ObjectsInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ObjectsInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ObjectsInfoResponse}
 */
proto.api.ObjectsInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ObjectData;
      reader.readMessage(value,proto.api.ObjectData.deserializeBinaryFromReader);
      msg.addObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ObjectsInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ObjectsInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ObjectsInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ObjectsInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.ObjectData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ObjectData Objects = 1;
 * @return {!Array<!proto.api.ObjectData>}
 */
proto.api.ObjectsInfoResponse.prototype.getObjectsList = function() {
  return /** @type{!Array<!proto.api.ObjectData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ObjectData, 1));
};


/**
 * @param {!Array<!proto.api.ObjectData>} value
 * @return {!proto.api.ObjectsInfoResponse} returns this
*/
proto.api.ObjectsInfoResponse.prototype.setObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.ObjectData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ObjectData}
 */
proto.api.ObjectsInfoResponse.prototype.addObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.ObjectData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ObjectsInfoResponse} returns this
 */
proto.api.ObjectsInfoResponse.prototype.clearObjectsList = function() {
  return this.setObjectsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeviceSensors.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeviceSensors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeviceSensors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeviceSensors.toObject = function(includeInstance, msg) {
  var f, obj = {
    booleansMap: (f = msg.getBooleansMap()) ? f.toObject(includeInstance, undefined) : [],
    doublesMap: (f = msg.getDoublesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeviceSensors}
 */
proto.api.DeviceSensors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeviceSensors;
  return proto.api.DeviceSensors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeviceSensors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeviceSensors}
 */
proto.api.DeviceSensors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getBooleansMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readBool, null, 0, false);
         });
      break;
    case 2:
      var value = msg.getDoublesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readDouble, null, 0, 0.0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeviceSensors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DeviceSensors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DeviceSensors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeviceSensors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBooleansMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getDoublesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeDouble);
  }
};


/**
 * map<uint32, bool> Booleans = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,boolean>}
 */
proto.api.DeviceSensors.prototype.getBooleansMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,boolean>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.DeviceSensors} returns this
 */
proto.api.DeviceSensors.prototype.clearBooleansMap = function() {
  this.getBooleansMap().clear();
  return this;};


/**
 * map<uint32, double> Doubles = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.api.DeviceSensors.prototype.getDoublesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.DeviceSensors} returns this
 */
proto.api.DeviceSensors.prototype.clearDoublesMap = function() {
  this.getDoublesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.TaggedPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.api.TaggedPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.TaggedPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TaggedPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicetime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    receivedtime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    position: (f = msg.getPosition()) && proto.api.GpsData.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.api.ObjectState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.TaggedPoint}
 */
proto.api.TaggedPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.TaggedPoint;
  return proto.api.TaggedPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.TaggedPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.TaggedPoint}
 */
proto.api.TaggedPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDevicetime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedtime(value);
      break;
    case 3:
      var value = new proto.api.GpsData;
      reader.readMessage(value,proto.api.GpsData.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 4:
      var value = new proto.api.ObjectState;
      reader.readMessage(value,proto.api.ObjectState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.TaggedPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.TaggedPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.TaggedPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TaggedPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicetime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getReceivedtime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.GpsData.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.ObjectState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.TaggedPoint.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.TaggedPoint} returns this
 */
proto.api.TaggedPoint.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 DeviceTime = 2;
 * @return {number}
 */
proto.api.TaggedPoint.prototype.getDevicetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.TaggedPoint} returns this
 */
proto.api.TaggedPoint.prototype.setDevicetime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ReceivedTime = 5;
 * @return {number}
 */
proto.api.TaggedPoint.prototype.getReceivedtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.TaggedPoint} returns this
 */
proto.api.TaggedPoint.prototype.setReceivedtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional GpsData Position = 3;
 * @return {?proto.api.GpsData}
 */
proto.api.TaggedPoint.prototype.getPosition = function() {
  return /** @type{?proto.api.GpsData} */ (
    jspb.Message.getWrapperField(this, proto.api.GpsData, 3));
};


/**
 * @param {?proto.api.GpsData|undefined} value
 * @return {!proto.api.TaggedPoint} returns this
*/
proto.api.TaggedPoint.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.TaggedPoint} returns this
 */
proto.api.TaggedPoint.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.TaggedPoint.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ObjectState State = 4;
 * @return {?proto.api.ObjectState}
 */
proto.api.TaggedPoint.prototype.getState = function() {
  return /** @type{?proto.api.ObjectState} */ (
    jspb.Message.getWrapperField(this, proto.api.ObjectState, 4));
};


/**
 * @param {?proto.api.ObjectState|undefined} value
 * @return {!proto.api.TaggedPoint} returns this
*/
proto.api.TaggedPoint.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.TaggedPoint} returns this
 */
proto.api.TaggedPoint.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.TaggedPoint.prototype.hasState = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ClosestPointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ClosestPointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ClosestPointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClosestPointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    devicetime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    edges: (f = msg.getEdges()) && proto.api.PointEdges.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ClosestPointsRequest}
 */
proto.api.ClosestPointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ClosestPointsRequest;
  return proto.api.ClosestPointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ClosestPointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ClosestPointsRequest}
 */
proto.api.ClosestPointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDevicetime(value);
      break;
    case 3:
      var value = new proto.api.PointEdges;
      reader.readMessage(value,proto.api.PointEdges.deserializeBinaryFromReader);
      msg.setEdges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ClosestPointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ClosestPointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ClosestPointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClosestPointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevicetime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEdges();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.PointEdges.serializeBinaryToWriter
    );
  }
};


/**
 * optional string DeviceCode = 1;
 * @return {string}
 */
proto.api.ClosestPointsRequest.prototype.getDevicecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ClosestPointsRequest} returns this
 */
proto.api.ClosestPointsRequest.prototype.setDevicecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 DeviceTime = 2;
 * @return {number}
 */
proto.api.ClosestPointsRequest.prototype.getDevicetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.ClosestPointsRequest} returns this
 */
proto.api.ClosestPointsRequest.prototype.setDevicetime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PointEdges Edges = 3;
 * @return {?proto.api.PointEdges}
 */
proto.api.ClosestPointsRequest.prototype.getEdges = function() {
  return /** @type{?proto.api.PointEdges} */ (
    jspb.Message.getWrapperField(this, proto.api.PointEdges, 3));
};


/**
 * @param {?proto.api.PointEdges|undefined} value
 * @return {!proto.api.ClosestPointsRequest} returns this
*/
proto.api.ClosestPointsRequest.prototype.setEdges = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ClosestPointsRequest} returns this
 */
proto.api.ClosestPointsRequest.prototype.clearEdges = function() {
  return this.setEdges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ClosestPointsRequest.prototype.hasEdges = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointEdges.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointEdges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointEdges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointEdges.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    right: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointEdges}
 */
proto.api.PointEdges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointEdges;
  return proto.api.PointEdges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointEdges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointEdges}
 */
proto.api.PointEdges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeft(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointEdges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointEdges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointEdges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointEdges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeft();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRight();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool Left = 1;
 * @return {boolean}
 */
proto.api.PointEdges.prototype.getLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.PointEdges} returns this
 */
proto.api.PointEdges.prototype.setLeft = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Right = 2;
 * @return {boolean}
 */
proto.api.PointEdges.prototype.getRight = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.PointEdges} returns this
 */
proto.api.PointEdges.prototype.setRight = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ClosestPointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ClosestPointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ClosestPointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClosestPointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: (f = msg.getLeft()) && proto.api.PointBundle.toObject(includeInstance, f),
    right: (f = msg.getRight()) && proto.api.PointBundle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ClosestPointsResponse}
 */
proto.api.ClosestPointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ClosestPointsResponse;
  return proto.api.ClosestPointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ClosestPointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ClosestPointsResponse}
 */
proto.api.ClosestPointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.PointBundle;
      reader.readMessage(value,proto.api.PointBundle.deserializeBinaryFromReader);
      msg.setLeft(value);
      break;
    case 2:
      var value = new proto.api.PointBundle;
      reader.readMessage(value,proto.api.PointBundle.deserializeBinaryFromReader);
      msg.setRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ClosestPointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ClosestPointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ClosestPointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClosestPointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.PointBundle.serializeBinaryToWriter
    );
  }
  f = message.getRight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.PointBundle.serializeBinaryToWriter
    );
  }
};


/**
 * optional PointBundle Left = 1;
 * @return {?proto.api.PointBundle}
 */
proto.api.ClosestPointsResponse.prototype.getLeft = function() {
  return /** @type{?proto.api.PointBundle} */ (
    jspb.Message.getWrapperField(this, proto.api.PointBundle, 1));
};


/**
 * @param {?proto.api.PointBundle|undefined} value
 * @return {!proto.api.ClosestPointsResponse} returns this
*/
proto.api.ClosestPointsResponse.prototype.setLeft = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ClosestPointsResponse} returns this
 */
proto.api.ClosestPointsResponse.prototype.clearLeft = function() {
  return this.setLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ClosestPointsResponse.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PointBundle Right = 2;
 * @return {?proto.api.PointBundle}
 */
proto.api.ClosestPointsResponse.prototype.getRight = function() {
  return /** @type{?proto.api.PointBundle} */ (
    jspb.Message.getWrapperField(this, proto.api.PointBundle, 2));
};


/**
 * @param {?proto.api.PointBundle|undefined} value
 * @return {!proto.api.ClosestPointsResponse} returns this
*/
proto.api.ClosestPointsResponse.prototype.setRight = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.ClosestPointsResponse} returns this
 */
proto.api.ClosestPointsResponse.prototype.clearRight = function() {
  return this.setRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.ClosestPointsResponse.prototype.hasRight = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.api);
